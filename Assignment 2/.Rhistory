df = read.table('alice.txt',sep='\t')
View(df)
df = read.table('alice.txt',sep=' ')
View(df)
table('alice.txt',sep=' ')
print df[1
df = read.table('alice.txt',sep=' ')
print df[1]
df = read.table('alice.txt',sep=' ')
print (df[1])
df = read.table('alice.txt',sep=' ')
print (df[1][1])
df = read.table('alice.txt',sep=' ')
print (df[2])
df = read.table('alice.txt',sep=' ')
colmeans(df)
df = read.table('alice.txt',sep=' ')
colMeans(df)
df = read.table('alice.txt',sep=' ')
means = colMeans(df)
x_a = means[1]
x_b = means[2]
df = read.table('alice.txt',sep=' ')
means = colMeans(df)
x_a = means[1]
x_b = means[2]
d = x_a - x_b
t.test(df[1], df[2])
df = read.table('alice.txt',sep=' ')
means = colMeans(df)
x_a = means[1]
x_b = means[2]
d = x_a - x_b
t.test(df[1], df[2], confidence_interval = 0.9))
df = read.table('alice.txt',sep=' ')
means = colMeans(df)
x_a = means[1]
x_b = means[2]
d = x_a - x_b
t.test(df[1], df[2], alpha = 0.9))
df = read.table('alice.txt',sep=' ')
means = colMeans(df)
x_a = means[1]
x_b = means[2]
d = x_a - x_b
t.test(df[1], df[2], conf.level = 0.9)
df = read.table('alice.txt',sep=' ')
means = colMeans(df)
alice = means[1]
bob = means[2]
t.test(alice, bob, conf.level = 0.9)
df = read.table('alice.txt',sep=' ')
alice = df[1]
bob = df[2]
t.test(alice, bob, conf.level = 0.9)
df = read.table('alice.txt',sep=' ')
alice = df[1]
bob = df[2]
t.test(alice, bob, conf.level = 0.9)
df = read.table('alice.txt',sep=' ')
alice = df[1]
bob = df[2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE)
df = read.table('alice.txt',sep=' ')
alice = df[1]
bob = df[2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE)
df = read.table('alice.txt',sep=' ')
alice = df[1]
bob = df[2]
t.test(alice, bob, conf.level = 0.9)
df = read.table('alice.txt',sep=' ')
alice = df[1]
bob = df[2]
t.test(alice, bob, conf.level = 0.9, paired = t)
df = read.table('alice.txt',sep=' ')
alice = df[1]
bob = df[2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE)
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE)
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE, alternative = "greater")
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE, alternative = "less")
greater
"greater
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE, alternative = "greater")
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE, alternative = "greater")
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE)
# Load the data
data <- read.table("Alice.txt", header = TRUE)
# Assuming your data is in the format with columns 'Alice' and 'Bob'
# Conduct a t-test
t_test_result <- t.test(data$Alice, data$Bob)
# Extract the mean difference
mean_difference <- t_test_result$estimate
# Calculate the margin of error for a 90% confidence interval
margin_of_error <- qt(0.95, df = length(data$Alice) - 1) * sqrt(var(data$Alice)/length(data$Alice) + var(data$Bob)/length(data$Bob))
# Calculate the confidence interval
confidence_interval <- c(mean_difference - margin_of_error, mean_difference + margin_of_error)
# Print the results
cat("The estimated mean difference is:", mean_difference, "\n")
cat("The 90% confidence interval for the mean difference is:", confidence_interval)
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE)
# Assuming your data is in the format with columns 'Alice' and 'Bob'
# Conduct a t-test
t_test_result <- t.test(alice, bob)
# Extract the mean difference
mean_difference <- t_test_result$estimate
# Calculate the margin of error for a 90% confidence interval
margin_of_error <- qt(0.95, df = length(alice) - 1) * sqrt(var(alice)/length(alice) + var(bob)/length(bob))
# Calculate the confidence interval
confidence_interval <- c(mean_difference - margin_of_error, mean_difference + margin_of_error)
# Print the results
cat("The estimated mean difference is:", mean_difference, "\n")
cat("The 90% confidence interval for the mean difference is:", confidence_interval)
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE)
# Extract the mean difference
mean_difference <- t_test_result$estimate
# Calculate the confidence interval
confidence_interval <- t_test_result$conf.int
# Print the results
cat("The estimated mean difference is:", mean_difference, "\n")
cat("The 90% confidence interval for the mean difference is:", confidence_interval)
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE)
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE)
# Extract the mean difference
mean_difference <- t_test_result$mean
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE)
# Extract the mean difference
mean_difference <- t_test_result$estimate
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t_test_result = t.test(alice, bob, conf.level = 0.9, paired = TRUE)
# Extract the mean difference
mean_difference <- t_test_result$estimate
# Calculate the confidence interval
confidence_interval <- t_test_result$conf.int
# Print the results
cat("The estimated mean difference is:", mean_difference, "\n")
cat("The 90% confidence interval for the mean difference is:", confidence_interval)
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t_test_result = t.test(alice, bob, conf.level = 0.9, paired = TRUE)
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t.test(alice, bob, conf.level = 0.9, paired = TRUE)
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t_test_result = t.test(alice, bob, conf.level = 0.9, paired = TRUE)
# Extract the mean difference
mean_difference = t_test_result$estimate
# Calculate the confidence interval
confidence_interval = t_test_result$conf.int
# Print the results
cat("The estimated mean difference is:", mean_difference, "\n")
cat("The 90% confidence interval for the mean difference is:", confidence_interval)
# Get the p-value
p_value = t_test_result$p.value
# Print the results
cat("The calculated p-value is:", p_value, "\n")
# Get the p-value
p_value = t_test_result$p.value
# Print the results
cat("The calculated p-value is:", p_value, "\n")
cat("The confidence interval for", expression(beta), "= 0.1 is:", confidence_interval)
# Get the p-value
p_value = t_test_result$p.value
# Print the results
cat("The calculated p-value is:", p_value, "\n")
cat("The confidence interval for $\alpha$ = 0.1 is:", confidence_interval)
# Get the p-value
p_value = t_test_result$p.value
# Print the results
cat("The calculated p-value is:", p_value, "\n")
cat("The confidence interval for α = 0.1 is:", confidence_interval)
# Get the p-value
p_value = t_test_result$p.value
# Print the results
cat("The calculated p-value is:", p_value, "\n")
cat("The confidence interval for α = 0.1 is: [", confidence_interval,"]")
# Get the p-value
p_value = t_test_result$p.value
# Print the results
cat("The calculated p-value is:", p_value, "\n", "The confidence interval for α = 0.1 is: [", confidence_interval,"]")
cat("The calculated p-value is:", p_value, "\nThe confidence interval for α = 0.1 is: [", confidence_interval,"]")
# Get the p-value
p_value = t_test_result$p.value
if (p_value < alpha) {
cat("The calculated p-value is:", p_value, "\nReject the null hypothesis. There is enough evidence to suggest that the mean working hours for Alice and Bob are different.")
} else {
cat("The calculated p-value is:", p_value, "\nFail to reject the null hypothesis. There is not enough evidence to suggest a difference in the mean working hours for Alice and Bob.")
# Get the p-value
p_value = t_test_result$p.value
if (p_value < alpha) {
cat("The calculated p-value is:", p_value, "\nReject the null hypothesis. There is enough evidence to suggest that the mean working hours for Alice and Bob are different.")
} else {
cat("The calculated p-value is:", p_value, "\nFail to reject the null hypothesis. There is not enough evidence to suggest a difference in the mean working hours for Alice and Bob.")
# Get the p-value
p_value = t_test_result$p.value
if (p_value < alpha) {
cat("The calculated p-value is:", p_value, "\nReject the null hypothesis. There is enough evidence to suggest that the mean working hours for Alice and Bob are different.")
} else {
cat("The calculated p-value is:", p_value, "\nFail to reject the null hypothesis. There is not enough evidence to suggest a difference in the mean working hours for Alice and Bob.")
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t_test_result = t.test(alice, bob, conf.level = 0.9, paired = TRUE)
# Extract the mean difference
mean_difference = t_test_result$estimate
# Calculate the confidence interval
confidence_interval = t_test_result$conf.int
# Print the results
cat("The estimated mean difference is:", mean_difference, "\n")
cat("The 90% confidence interval for the mean difference is: [", confidence_interval,"]")
# Get the p-value
p_value = t_test_result$p.value
if (p_value < alpha) {
cat("The calculated p-value is:", p_value, "\nReject the null hypothesis. There is enough evidence to suggest that the mean working hours for Alice and Bob are different.")
} else {
cat("The calculated p-value is:", p_value, "\nFail to reject the null hypothesis. There is not enough evidence to suggest a difference in the mean working hours for Alice and Bob.")
}
# Get the p-value
p_value = t_test_result$p.value
alpha = 0.1
if (p_value < alpha) {
cat("The calculated p-value is:", p_value, "\nReject the null hypothesis. There is enough evidence to suggest that the mean working hours for Alice and Bob are different.")
} else {
cat("The calculated p-value is:", p_value, "\nFail to reject the null hypothesis. There is not enough evidence to suggest a difference in the mean working hours for Alice and Bob.")
}
# Get the p-value
p_value = t_test_result$p.value
alpha = 0.1
if (p_value < alpha) {
cat("The calculated p-value is:", p_value, "\nReject the  manager's (null) hypothesis. There is enough evidence to suggest that the mean working hours for Alice and Bob are different.")
} else {
cat("The calculated p-value is:", p_value, "\nFail to reject the manager's (null) hypothesis. There is not enough evidence to suggest a difference in the mean working hours for Alice and Bob.")
# Get the p-value
p_value = t_test_result$p.value
alpha = 0.1
if (p_value < alpha) {
cat("The calculated p-value is:", p_value, "\nReject the  manager's (null) hypothesis. There is enough evidence to suggest that the mean working hours for Alice and Bob are different.")
} else {
cat("The calculated p-value is:", p_value, "\nFail to reject the manager's (null) hypothesis. There is not enough evidence to suggest a difference in the mean working hours for Alice and Bob.")
}
# Get the p-value
p_value = t_test_result$p.value
alpha = 0.1
if (p_value < alpha) {
cat("The calculated p-value is:", p_value, "\nReject the  manager's (null) hypothesis. There is enough evidence to suggest that the mean working hours for Alice and Bob are different.")
} else {
cat("The calculated p-value is:", p_value, "\nFail to reject the manager's (null) hypothesis. There is not enough evidence to suggest a difference in the mean working hours for Alice and Bob.")
}
# Get the p-value
p_value = t_test_result$p.value
alpha = 0.1
if (p_value < alpha) {
cat("The calculated p-value is:", p_value, "\nReject the  manager's (null) hypothesis. There is enough evidence to suggest that the mean working hours for Alice and Bob are different.")
} else {
cat("The calculated p-value is:", p_value, "\nFail to reject the manager's (null) hypothesis. There is not enough evidence to suggest a difference in the mean working hours for Alice and Bob.")
}
# Get the p-value
p_value = t_test_result$p.value
alpha = 0.1
if (p_value < alpha) {
cat("The calculated p-value is:", p_value, "\nReject the  manager's (null) hypothesis. There is enough evidence to suggest that the mean working hours for Alice and Bob are different.")
} else {
cat("The calculated p-value is:", p_value, "\nFail to reject the manager's (null) hypothesis. There is not enough evidence to suggest a difference in the mean working hours for Alice and Bob.")
}
df = read.table('alice.txt',sep=' ')
alice = df[,1]
bob = df[,2]
t_test_result = t.test(alice, bob, conf.level = 0.9, paired = TRUE)
# Extract the mean difference
mean_difference = t_test_result$estimate
# Calculate the confidence interval
confidence_interval = t_test_result$conf.int
# Print the results
cat("The estimated mean difference is:", mean_difference, "\n")
cat("The 90% confidence interval for the mean difference is: [", confidence_interval,"]")
